[gd_scene load_steps=6 format=3 uid="uid://bap41f3f5nwya"]

[sub_resource type="GDScript" id="GDScript_m7ten"]
script/source = "extends Node3D


@onready var uberhero = preload(\"res://scenes/models/uberhero/Uberhero.tscn\")

# Called when the node enters the scene tree for the first time.
func _ready():
	PhysicsServer3D.set_active(false)
	
	var size = 50
	for x in size:
		for y in size:
			var node = uberhero.instantiate() as Node3D
			add_child(node)
			
			node.position = Vector3((x - size / 2) * 1.5, (y - size / 2) * 1.7, 0)
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	PhysicsServer3D.set_active(false)
	PhysicsServer2D.set_active(false)
	pass
"

[sub_resource type="GDScript" id="GDScript_7qeds"]
script/source = "extends Camera3D


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	size += 50. * delta if Input.is_key_pressed(KEY_Z) else 0
	size -= 50. * delta if Input.is_key_pressed(KEY_A) else 0
	
	position.x -= 10. * delta if Input.is_key_pressed(KEY_LEFT) else 0
	position.x += 10. * delta if Input.is_key_pressed(KEY_RIGHT) else 0
	pass
"

[sub_resource type="BoxMesh" id="BoxMesh_3c30d"]

[sub_resource type="Shader" id="Shader_8f03r"]
code = "shader_type spatial;
render_mode unshaded;

vec3 ScreenSpaceDither( vec2 vScreenPos )
{
	// Iestyn's RGB dither (7 asm instructions) from Portal 2 X360, slightly modified for VR
	//vec3 vDither = vec3( dot( vec2( 171.0, 231.0 ), vScreenPos.xy + iTime ) );
    vec3 vDither = vec3( dot( vec2( 171.0, 231.0 ), vScreenPos.xy ) );
    vDither.rgb = fract( vDither.rgb / vec3( 103.0, 71.0, 97.0 ) );
    
    //note: apply triangular pdf
    //vDither.r = remap_noise_tri_erp(vDither.r)*2.0-0.5;
    //vDither.g = remap_noise_tri_erp(vDither.g)*2.0-0.5;
    //vDither.b = remap_noise_tri_erp(vDither.b)*2.0-0.5;
    
    return vDither.rgb / 255.0; //note: looks better without 0.375...

    //note: not sure why the 0.5-offset is there...
    //vDither.rgb = fract( vDither.rgb / vec3( 103.0, 71.0, 97.0 ) ) - vec3( 0.5, 0.5, 0.5 );
	//return (vDither.rgb / 255.0) * 0.375;
}

float find_closest(int x, int y, float c0)
{
  mat4 dither = mat4(vec4( 1.0, 33.0, 9.0, 41.0),
		     vec4(49.0, 17.0, 57.0, 25.0),
		     vec4(13.0, 45.0, 5.0, 37.0),
		     vec4(61.0, 29.0, 53.0, 21.0));

  float limit = 0.0;

  vec4 subd;
  // No indexing on variables in Godot (as of 3.1)
  subd = dither[x];
  limit = subd[y];

  limit = limit / 64.0;

  if (c0 < limit){
    return 0.0;
  } else {
    return 1.0;
  }
}

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 0.5453);
}

void fragment() {
	// Place fragment code here.
	
	vec2 size = vec2(textureSize(SCREEN_TEXTURE, 0));
	
	float aspect_ratio = size.x / size.y;
	vec2 sr = vec2(SCREEN_UV.x * 850.0, SCREEN_UV.y * 850.0 * aspect_ratio);
	
	vec4 cr = FRAGCOORD;
	/*cr.x += rand(vec2(TIME, TIME));
	cr.y += rand(vec2(TIME, TIME));*/
	
	//ALPHA = find_closest(int(mod(cr.x, 4.0)), int(mod(cr.y, 4.0)), ALPHA) + 0.2;
	ALPHA = ScreenSpaceDither(vec2(mod(cr.x, 4.0), mod(cr.y, 4.0))).y * 500. * ALPHA;
	ALPHA_SCISSOR_THRESHOLD = 0.1;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ii7px"]
render_priority = 0
shader = SubResource( "Shader_8f03r" )

[node name="Node2D" type="Node3D"]
script = SubResource( "GDScript_m7ten" )

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2.493)
projection = 1
size = 10.0
script = SubResource( "GDScript_7qeds" )

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.115548, 0.0227711, -0.293749)
transparency = 0.31
mesh = SubResource( "BoxMesh_3c30d" )
surface_material_override/0 = SubResource( "ShaderMaterial_ii7px" )

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.455102, 0.428727, -0.368404)
mesh = SubResource( "BoxMesh_3c30d" )
surface_material_override/0 = SubResource( "ShaderMaterial_ii7px" )
