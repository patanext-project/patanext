//
// Auto-generated by dnne-gen
//
// .NET Assembly: PataNext.Export.Godot
//

//
// Declare exported functions
//
#ifndef __DNNE_GENERATED_HEADER_PATANEXT_EXPORT_GODOT__
#define __DNNE_GENERATED_HEADER_PATANEXT_EXPORT_GODOT__

#include <stddef.h>
#include <stdint.h>
#include <dnne.h>

// Computed from PataNext.Export.Godot.Program.GodotLoad
DNNE_EXTERN_C DNNE_API uint8_t DNNE_CALLTYPE_CDECL lib_load(/* SUPPLY TYPE */* gdInterface, void* gdLibrary, /* SUPPLY TYPE */* gdInit);

#endif // __DNNE_GENERATED_HEADER_PATANEXT_EXPORT_GODOT__

//
// Define exported functions
//
#ifdef DNNE_COMPILE_AS_SOURCE

#ifdef DNNE_WINDOWS
    #ifdef _WCHAR_T_DEFINED
        typedef wchar_t char_t;
    #else
        typedef unsigned short char_t;
    #endif
#else
    typedef char char_t;
#endif

//
// Forward declarations
//

extern void* get_callable_managed_function(
    const char_t* dotnet_type,
    const char_t* dotnet_type_method,
    const char_t* dotnet_delegate_type);

extern void* get_fast_callable_managed_function(
    const char_t* dotnet_type,
    const char_t* dotnet_type_method);

//
// String constants
//

static const char_t* t1_name = DNNE_STR("PataNext.Export.Godot.Program, PataNext.Export.Godot");

//
// Exports
//

// Computed from PataNext.Export.Godot.Program.GodotLoad
static uint8_t (DNNE_CALLTYPE_CDECL* lib_load_ptr)(/* SUPPLY TYPE */* gdInterface, void* gdLibrary, /* SUPPLY TYPE */* gdInit);
DNNE_EXTERN_C DNNE_API uint8_t DNNE_CALLTYPE_CDECL lib_load(/* SUPPLY TYPE */* gdInterface, void* gdLibrary, /* SUPPLY TYPE */* gdInit)
{
    if (lib_load_ptr == NULL)
    {
        const char_t* methodName = DNNE_STR("GodotLoad");
        lib_load_ptr = (uint8_t(DNNE_CALLTYPE_CDECL*)(/* SUPPLY TYPE */* gdInterface, void* gdLibrary, /* SUPPLY TYPE */* gdInit))get_fast_callable_managed_function(t1_name, methodName);
    }
    return lib_load_ptr(gdInterface, gdLibrary, gdInit);
}

#endif // DNNE_COMPILE_AS_SOURCE
